# AutoGen 框架配置檔案範例
# 複製此檔案為 conf_autogen.yaml 並根據需要調整設定
# 生產環境配置
# environment: production
# debug: false

# AutoGen 基本設定
autogen:
  # 預設 LLM 配置
  default_llm_config:
    max_tokens: 100000
    timeout: 30

  # 智能體基本設定
  agent_defaults:
    max_consecutive_auto_reply: 10
    human_input_mode: "NEVER"
    code_execution_config: false

  # 群組對話設定
  group_chat:
    max_round: 50
    admin_name: "Admin"
    speaker_selection_method: "auto"
    allow_repeat_speaker: true

# 智能體角色配置
agents:
  coordinator:
    name: "CoordinatorAgent"
    role: "coordinator"
    system_message: "你是協調者，負責管理整個研究工作流程。"
    llm_config_override:
      temperature: 0.3

  planner:
    name: "PlannerAgent"
    role: "planner"
    system_message: "你是計劃者，負責分析需求並制定詳細的執行計劃。"
    llm_config_override:
      temperature: 0.5

  researcher:
    name: "ResearcherAgent"
    role: "researcher"
    system_message: "你是研究員，負責進行網路搜尋和資訊收集。"
    tools:
      - "web_search"
      - "crawl_tool"
      # - "local_search"

  coder:
    name: "CoderAgent"
    role: "coder"
    system_message: "你是程式設計師，負責程式碼分析和執行。"
    tools:
      - "python_repl"
    code_execution_config:
      work_dir: "temp_code"
      use_docker: false

  reporter:
    name: "ReporterAgent"
    role: "reporter"
    system_message: "你是報告撰寫者，負責整理資訊並生成最終報告。"
    llm_config_override:
      temperature: 0.0

# 工作流程配置
workflows:
  research:
    enabled_agents:
      ["coordinator", "planner", "researcher", "coder", "reporter"]
    workflow_type: "sequential_with_feedback"
    human_feedback_steps: ["plan_review"]
    max_iterations: 3

  podcast:
    enabled_agents:
      ["coordinator", "script_writer", "tts_generator", "audio_mixer"]
    workflow_type: "pipeline"

  ppt:
    enabled_agents: ["coordinator", "content_organizer", "slide_generator"]
    workflow_type: "pipeline"

# 工具配置
tools:
  web_search:
    provider: "tavily" # tavily, brave_search, duckduckgo, arxiv, grounding_bing
    max_results: 5

  code_execution:
    timeout: 60
    max_execution_time: 300
    allowed_modules:
      - "pandas"
      - "numpy"
      - "matplotlib"
      - "requests"

  mcp_servers:
    github_trending:
      transport: "stdio"
      command: "uvx"
      args: ["mcp-github-trending"]
      enabled_tools: ["get_github_trending_repositories"]

# 模型配置
BASIC_MODEL:
  model: $AZURE_DEPLOYMENT_NAME_4_1_MINI
  azure_deployment: $AZURE_DEPLOYMENT_NAME_4_1_MINI
  azure_endpoint: $AZURE_OPENAI_ENDPOINT
  api_version: $BASIC_MODEL__API_VERSION
  api_key: $BASIC_MODEL__API_KEY
  verify_ssl: false
  model_type: "azure"

REASONING_MODEL:
  model: $AZURE_DEPLOYMENT_NAME_4_1
  azure_deployment: $AZURE_DEPLOYMENT_NAME_4_1
  azure_endpoint: $AZURE_OPENAI_ENDPOINT
  api_version: $BASIC_MODEL__API_VERSION
  api_key: $REASONING_MODEL__API_KEY
  verify_ssl: false
  model_type: "azure"

# Use Azure Open AI with key (from AutoGen example)
# provider: autogen_ext.models.openai.AzureOpenAIChatCompletionClient
# config:
#   model: $AZURE_DEPLOYMENT_NAME_4_1_MINI
#   azure_endpoint: $AZURE_OPENAI_ENDPOINT
#   azure_deployment: $AZURE_DEPLOYMENT_NAME_4_1_MINI
#   api_version: $BASIC_MODEL__API_VERSION
#   api_key: $BASIC_MODEL__API_KEY

# 記錄設定
LOGGING:
  # 提供者選項：file, sqlite://path/to/db.sqlite, postgresql://user:pass@host:port/dbname
  provider: "file"

  # 日誌級別設定
  level: "INFO"

  # 輸出設定
  console_output: true

  # 檔案設定
  file_settings:
    log_dir: "logs"
    max_days: 10
    compress_old_files: true

  # 外部套件日誌設定
  external_loggers:
    level: "ERROR"

  # 日誌格式設定
  format:
    main: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    thread: "%(asctime)s - %(levelname)s - %(message)s"

  # 特定功能日誌
  conversation_log: true
  agent_actions_log: true

# 安全設定
security:
  enable_code_execution: true
  sandbox_mode: true
  allowed_file_extensions: [".py", ".txt", ".md", ".json", ".csv"]
  max_file_size_mb: 10

# 效能設定
performance:
  parallel_execution: false # 暫時關閉，等穩定後開啟
  cache_responses: true
  max_memory_mb: 1000
